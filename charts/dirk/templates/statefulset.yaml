apiVersion: {{ include "common.capabilities.statefulset.apiVersion" . }}
kind: StatefulSet
metadata:
  name: {{ include "common.names.fullname" . }}
  labels:
    {{- include "common.labels.standard" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "common.labels.matchLabels" . | nindent 6 }}
  serviceName: {{ include "common.names.fullname" . }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "common.labels.matchLabels" . | nindent 8 }}
    spec:
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "dirk.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: init
          image: "{{ .Values.initImage.repository }}:{{ .Values.initImage.tag }}"
          imagePullPolicy: {{ .Values.initImage.pullPolicy }}
          securityContext:
            runAsUser: 0
          command:
            - sh
            - -ac
            - >
              mkdir -p /data/dirk /data/keystore;
              chown -R {{ .Values.podSecurityContext.runAsUser }}:{{ .Values.podSecurityContext.fsGroup }} /data/dirk
          envFrom:
            - secretRef:
                name: eso-{{ include "common.names.fullname" . }}
          volumeMounts:
            - name: data
              mountPath: /data
        - name: fetch-keys
          image: "{{ .Values.cliImage.repository }}:{{ .Values.cliImage.tag }}"
          imagePullPolicy: {{ .Values.cliImage.pullPolicy }}
          securityContext:
            runAsUser: 0
          envFrom:
            - secretRef:
                name: eso-{{ include "common.names.fullname" . }}
          args: ["sync-dirk-keys", "--db-url", $(ESO_DB_KEYSTORE_URL), "--wallet-dir", "/data/dirk", "--decryption-key-env", "ESO_DECRYPTION_KEY"]
          volumeMounts:
            - name: data
              mountPath: /data
      containers:
        - name: sleeper
          image: "bash:latest"
          imagePullPolicy: {{ .Values.cliImage.pullPolicy }}
          securityContext:
            runAsUser: 0
          envFrom:
            - secretRef:
                name: eso-{{ include "common.names.fullname" . }}
          command: [ "/usr/local/bin/bash", "-c", "--" ]
          args: [ "while true; do sleep 30; done;" ]
          volumeMounts:
            - name: data
              mountPath: /data
      volumes:
        - name: config
          configMap:
            name: {{ include "common.names.fullname" . }}
        - name: migrations
          configMap:
            name: {{ include "common.names.fullname" . }}-migrations
        - name: data
          emptyDir:
            medium: Memory
            sizeLimit: 128Mi