# Default values for ssv-node.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
nameOverride: ""
fullnameOverride: ""
imagePullSecrets: []

replicaCount: 1

image:
  repository: bloxstaking/ssv-node
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "v1.3.0-rc.1"

config:
  args:
    - make BUILD_PATH=/go/bin/ssvnode start-node
  overrideConfigFile: false
  network: holesky
  privateKeyFile: /etc/ssv-node/encrypted_private_key.json
  passwordFile: /etc/ssv-node/password
  executionAddress: "ws://geth:8546"
  beaconAddress: "http://lighthouse:5062"
  logLevel: info
  # configFile: |
  #   ssv:
  #     Network: holesky
  #     ValidatorOptions:
  #       BuilderProposals: true
  #   KeyStore:
  #     PrivateKeyFile: /etc/ssv-node/encrypted_private_key.json
  #     PasswordFile: /etc/ssv-node/password
  #   p2p:
  #     DiscoveryType: discv5
  #     TcpPort: 13001
  #     UdpPort: 12001
  #   db:
  #     Path: /data/db
  #   eth2:
  #     BeaconNodeAddr: http://lighthouse:5052
  #   eth1:
  #     ETH1Addr: ws://geth:8546
  #   MetricsAPIPort: 15001
  #   global:
  #     LogFormat: json
  #     LogLevelFormat: lowercase
  #     LogLevel: info
  #     LogFilePath: /data/debug.log

env_vars:
  - name: CONFIG_PATH
    value: /config/config.yaml

externalSecrets:
  enabled: false

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: NodePort
  ports:
    p2pTCP: 30030
    p2pUDP: 30031
    metrics: 15001

ingress:
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  {}
  # requests:
  #   cpu: 500m
  #   memory: 256Mi
  # limits:
  #   cpu: 100m
  #   memory: 128Mi

# livenessProbe:
#   httpGet:
#     path: /
#     port: http
# readinessProbe:
#   httpGet:
#     path: /
#     port: http

nodeSelector: {}

affinity: {}

tolerations: []
